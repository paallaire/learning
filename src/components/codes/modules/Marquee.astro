---
interface Props {
  direction: string;
  speed: string;
  duplicate: string;
}

const { direction = "left", speed = "fast", duplicate = "1" } = Astro.props;
---

<div class="marquee" data-module="marquee" data-direction={direction} data-speed={speed} data-duplicate={duplicate}>
  <ul class="marquee__inner">
    <slot />
  </ul>
</div>

<style>
  .marquee {
    --_gap: 1rem;
    --_animation-duration: 40s;
    --_animation-direction: forwards;
    max-width: 100%;
  }

  .marquee__inner {
    padding-block: 1rem;
    display: flex;
    flex-wrap: wrap;
    gap: var(--_gap);
  }

  .marquee[data-animated="true"] {
    overflow: hidden;
    -webkit-mask: linear-gradient(90deg, transparent, white 20%, white 80%, transparent);
    mask: linear-gradient(90deg, transparent, white 20%, white 80%, transparent);
  }

  .marquee[data-animated="true"] .marquee__inner {
    width: max-content;
    flex-wrap: nowrap;
    animation: scroll var(--_animation-duration) var(--_animation-direction) linear infinite;
  }

  @keyframes scroll {
    to {
      transform: translate(calc(-50% - (var(--_gap) / 2)));
    }
  }

  /* options */
  .marquee[data-direction="right"] {
    --_animation-direction: reverse;
  }

  .marquee[data-direction="left"] {
    --_animation-direction: forwards;
  }

  .marquee[data-speed="fast"] {
    --_animation-duration: 20s;
  }

  .marquee[data-speed="slow"] {
    --_animation-duration: 30s;
  }
</style>
